local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Reference screenshot is 910x512 (GUI area) on a 1708x768 screen, about 53% width and 66% height.
-- We'll use a size close to that for the UI:
local guiWidth, guiHeight = 500, 300

local Window = Fluent:CreateWindow({
    Title = "ShadowCore" .. Fluent.Version,
    SubTitle = "by Sin",
    TabWidth = 160,
    Size = UDim2.fromOffset(guiWidth, guiHeight),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }),
    ["Local Player"] = Window:AddTab({ Title = "Local Player", Icon = "user" })
}

local Options = Fluent.Options

-- Main Tab Example Features
do
    Tabs.Main:AddParagraph({
        Title = "Welcome to ShadowCore!",
        Content = "High quality, modern UI for your scripts.\nAll major Fluent controls and features are available below."
    })

    Tabs.Main:AddButton({
        Title = "Show Notification",
        Description = "Test the notification system.",
        Callback = function()
            Fluent:Notify({
                Title = "Hello!",
                Content = "You clicked the notification test button.",
                Duration = 3
            })
        end
    })

    local Toggle = Tabs.Main:AddToggle("MainToggle", {Title = "Enable Feature", Default = false})
    Toggle:OnChanged(function()
        Fluent:Notify({ Title = "Toggle", Content = "MainToggle: " .. tostring(Options.MainToggle.Value), Duration = 2 })
    end)

    local Slider = Tabs.Main:AddSlider("MainSlider", {
        Title = "Adjust Value",
        Description = "Drag to change.",
        Default = 5,
        Min = 0,
        Max = 10,
        Rounding = 1,
        Callback = function(Value)
            Fluent:Notify({ Title = "Slider", Content = "Value: " .. tostring(Value), Duration = 1.5 })
        end
    })

    Slider:OnChanged(function(Value)
        print("Slider changed:", Value)
    end)
    Slider:SetValue(5)

    local Dropdown = Tabs.Main:AddDropdown("MainDropdown", {
        Title = "Options",
        Values = {"Alpha", "Beta", "Gamma", "Delta"},
        Multi = false,
        Default = 1,
    })

    Dropdown:OnChanged(function(Value)
        Fluent:Notify({ Title = "Dropdown", Content = "Selected: " .. tostring(Value), Duration = 1.5 })
    end)
end

-- Local Player Tab: As per your reference image (Image 4)
do
    local tab = Tabs["Local Player"]

    tab:AddSection("Self")
    local FOVToggle = tab:AddToggle("FOVEnabled", { Title = "FOV", Default = false })
    local FOVSlider = tab:AddSlider("FOV", {
        Title = "FOV",
        Default = 60,
        Min = 30,
        Max = 120,
        Rounding = 0,
        Callback = function(Value)
            if workspace.CurrentCamera then
                workspace.CurrentCamera.FieldOfView = Value
            end
        end
    })
    FOVSlider:SetValue(60)

    -- FOV toggle logic to show/hide the slider
    local function updateFOVSlider()
        if FOVSlider and FOVSlider.Frame then
            FOVSlider.Frame.Visible = Options.FOVEnabled.Value
        end
    end
    FOVToggle:OnChanged(updateFOVSlider)
    updateFOVSlider()

    tab:AddSection("Ambient")
    local RichShaderToggle = tab:AddToggle("RichShader", { Title = "Rich Shader", Default = false })
    local ShaderColor = tab:AddColorpicker("ShaderColor", {
        Title = "Shader Color",
        Default = Color3.fromRGB(200,200,255)
    })
    local LightingTheme = tab:AddDropdown("LightingTheme", {
        Title = "Lighting Theme",
        Values = {"Purple", "Blue", "Red", "Green"},
        Default = 1
    })
    local EnableLightingTheme = tab:AddToggle("EnableLightingTheme", {
        Title = "Enable Lighting Theme",
        Default = false
    })
end

-- Settings Tab Example
do
    Tabs.Settings:AddParagraph({
        Title = "Settings",
        Content = "Configure your experience, save/load configs, and manage themes below."
    })
end

-- Addons: SaveManager & InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "ShadowCore",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
